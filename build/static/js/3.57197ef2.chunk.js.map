{"version":3,"sources":["components/comments/Comments.module.css","components/comments/NewCommentForm.module.css","components/quotes/HighlightedQuote.module.css","components/comments/NewCommentForm.js","components/comments/Comments.js","components/quotes/HighlightedQuote.js","pages/Quote/QuoteDetail.js"],"names":["module","exports","NewCommentForm","props","commentTextRef","useRef","submitFormHandler","event","preventDefault","className","classes","form","onSubmit","control","htmlFor","id","rows","ref","actions","Comments","useState","isAddingComment","setIsAddingComment","comments","onClick","HighlightedQuote","quote","text","author","dummy_quotes","QuoteDetail","params","useParams","foundQuote","find","q","quoteID","to","path","element"],"mappings":"sHACAA,EAAOC,QAAU,CAAC,SAAW,6B,mBCA7BD,EAAOC,QAAU,CAAC,KAAO,6BAA6B,QAAU,gCAAgC,QAAU,gCAAgC,QAAU,kC,mBCApJD,EAAOC,QAAU,CAAC,MAAQ,kC,gHC2BXC,EAxBQ,SAACC,GACtB,IAAMC,EAAiBC,mBAEjBC,EAAoB,SAACC,GACzBA,EAAMC,kBAOR,OACE,uBAAMC,UAAWC,IAAQC,KAAMC,SAAUN,EAAzC,UACE,sBAAKG,UAAWC,IAAQG,QAASD,SAAUN,EAA3C,UACE,uBAAOQ,QAAQ,UAAf,0BACA,0BAAUC,GAAG,UAAUC,KAAK,IAAIC,IAAKb,OAEvC,qBAAKK,UAAWC,IAAQQ,QAAxB,SACE,wBAAQT,UAAU,MAAlB,+BCIOU,EArBE,WACf,MAA8CC,oBAAS,GAAvD,mBAAOC,EAAP,KAAwBC,EAAxB,KAMA,OACE,0BAASb,UAAWC,IAAQa,SAA5B,UACE,gDACEF,GACA,wBAAQZ,UAAU,MAAMe,QARC,WAC7BF,GAAmB,IAOf,2BAIDD,GAAmB,cAAC,EAAD,IACpB,gD,iBCVSI,EATU,SAACtB,GACxB,OACE,yBAAQM,UAAWC,IAAQgB,MAA3B,UACE,4BAAIvB,EAAMwB,OACV,qCAAaxB,EAAMyB,aCFnBC,EAAe,CACnB,CAACd,GAAI,KAAMa,OAAQ,OAAQD,KAAM,mBACjC,CAACZ,GAAI,KAAMa,OAAQ,QAASD,KAAM,sBA0BnBG,UAvBG,SAAA3B,GAClB,IAAM4B,EAASC,cACTC,EAAaJ,EAAaK,MAAK,SAAAC,GAAC,OAAIA,EAAEpB,KAAOgB,EAAOK,WAE1D,OACE,qCACE,cAAC,EAAD,CAAkBT,KAAMM,EAAWN,KAAMC,OAAQK,EAAWL,SAC5D,cAAC,IAAD,CAAMnB,UAAU,MAAM4B,GAAG,SAAzB,+BACA,qBAAK5B,UAAU,WAAf,SACM,cAAC,IAAD,CAAMA,UAAU,YAAY4B,GAAG,WAA/B,6BAIN,cAAC,IAAD,UACE,cAAC,IAAD,CAAOC,KAAK,WAAYC,QACtB,cAAC,EAAD","file":"static/js/3.57197ef2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"Comments_comments__1m0lt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"NewCommentForm_form__1ztqw\",\"loading\":\"NewCommentForm_loading__3MVkw\",\"control\":\"NewCommentForm_control__bMIg9\",\"actions\":\"NewCommentForm_actions__Tdxgq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"quote\":\"HighlightedQuote_quote__J5Hfx\"};","import { useRef } from 'react';\n\nimport classes from './NewCommentForm.module.css';\n\nconst NewCommentForm = (props) => {\n  const commentTextRef = useRef();\n\n  const submitFormHandler = (event) => {\n    event.preventDefault();\n\n    // optional: Could validate here\n\n    // send comment to server\n  };\n\n  return (\n    <form className={classes.form} onSubmit={submitFormHandler}>\n      <div className={classes.control} onSubmit={submitFormHandler}>\n        <label htmlFor='comment'>Your Comment</label>\n        <textarea id='comment' rows='5' ref={commentTextRef}></textarea>\n      </div>\n      <div className={classes.actions}>\n        <button className='btn'>Add Comment</button>\n      </div>\n    </form>\n  );\n};\n\nexport default NewCommentForm;\n","import { useState } from 'react';\n\nimport classes from './Comments.module.css';\nimport NewCommentForm from './NewCommentForm';\n\nconst Comments = () => {\n  const [isAddingComment, setIsAddingComment] = useState(false);\n\n  const startAddCommentHandler = () => {\n    setIsAddingComment(true);\n  };\n  \n  return (\n    <section className={classes.comments}>\n      <h2>User Comments</h2>\n      {!isAddingComment && (\n        <button className='btn' onClick={startAddCommentHandler}>\n          Add a Comment\n        </button>\n      )}\n      {isAddingComment && <NewCommentForm />}\n      <p>Comments...</p>\n    </section>\n  );\n};\n\nexport default Comments;\n","import classes from './HighlightedQuote.module.css';\n\nconst HighlightedQuote = (props) => {\n  return (\n    <figure className={classes.quote}>\n      <p>{props.text}</p>\n      <figcaption>{props.author}</figcaption>\n    </figure>\n  );\n};\n\nexport default HighlightedQuote;\n","import {Link, Route, useParams, Routes} from 'react-router-dom'\r\nimport Comments from '../../components/comments/Comments'\r\nimport HighlightedQuote from '../../components/quotes/HighlightedQuote'\r\n\r\nconst dummy_quotes = [\r\n  {id: 'q1', author: 'John', text: 'This is insane!'},\r\n  {id: 'q2', author: 'Mandy', text: 'Learning yourself'}\r\n]\r\n\r\nconst QuoteDetail = props => {\r\n  const params = useParams()\r\n  const foundQuote = dummy_quotes.find(q => q.id === params.quoteID)\r\n  \r\n  return (\r\n    <>\r\n      <HighlightedQuote text={foundQuote.text} author={foundQuote.author}/>\r\n      <Link className=\"btn\" to='/quote'>Back to All Quote</Link>\r\n      <div className='centered'>\r\n            <Link className=\"btn--flat\" to='comments'>\r\n              Load Comments\r\n            </Link>\r\n      </div>\r\n      <Routes>\r\n        <Route path=\"comments\"  element={\r\n          <Comments/>\r\n        }>\r\n        </Route>      \r\n      </Routes>\r\n\r\n    </>\r\n    )\r\n  }\r\n  export default QuoteDetail"],"sourceRoot":""}