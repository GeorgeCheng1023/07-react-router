{"version":3,"sources":["components/quotes/QuoteItem.module.css","components/quotes/QuoteList.module.css","components/quotes/QuoteItem.js","components/quotes/QuoteList.js","pages/Quote/AllQuotes.js"],"names":["module","exports","QuoteItem","props","className","classes","item","text","author","to","id","QuoteList","quotes","ascending","navigate","useNavigate","location","useLocation","isDesending","URLSearchParams","search","get","sortedQuotes","sort","quoteA","quoteB","sorting","onClick","pathname","list","map","quote","dummy_quotes","AllQuotes"],"mappings":"sHACAA,EAAOC,QAAU,CAAC,KAAO,0B,mBCAzBD,EAAOC,QAAU,CAAC,KAAO,wBAAwB,QAAU,6B,wFCiB5CC,EAhBG,SAACC,GACjB,OACE,qBAAIC,UAAWC,IAAQC,KAAvB,UACE,mCACE,qCACE,4BAAIH,EAAMI,SAEZ,qCAAaJ,EAAMK,YAErB,cAAC,IAAD,CAAMJ,UAAU,MAAMK,GAAE,iBAAYN,EAAMO,IAA1C,iC,iBCyCSC,EAnCG,SAACR,GACjB,IAXkBS,EAAQC,EAWpBC,EAAWC,cACXC,EAAWC,cAGXC,EAA0C,QAD5B,IAAIC,gBAAgBH,EAASI,QACjBC,IAAI,QAE9BC,GAjBYV,EAiBcT,EAAMS,OAjBZC,EAiBoBK,EAhBvCN,EAAOW,MAAK,SAACC,EAAQC,GAC1B,OAAIZ,EACKW,EAAOd,GAAKe,EAAOf,GAAK,GAAK,EAE7Bc,EAAOd,GAAKe,EAAOf,GAAK,GAAK,MAqBxC,OACE,eAAC,WAAD,WACE,qBAAKN,UAAWC,IAAQqB,QAAxB,SACE,wBAAQC,QAVY,WACxBb,EAASE,EAASY,SAAT,gBAA6BV,EAAc,OAAS,SASzD,SAAqCA,EAAc,kBAAoB,qBAEzE,oBAAId,UAAWC,IAAQwB,KAAvB,SACGP,EAAaQ,KAAI,SAACC,GAAD,OAChB,cAAC,EAAD,CAEErB,GAAIqB,EAAMrB,GACVF,OAAQuB,EAAMvB,OACdD,KAAMwB,EAAMxB,MAHPwB,EAAMrB,aCvCjBsB,EAAe,CACnB,CAACtB,GAAI,KAAMF,OAAQ,OAAQD,KAAM,mBACjC,CAACG,GAAI,KAAMF,OAAQ,QAASD,KAAM,sBAWrB0B,UARG,SAAA9B,GAChB,OACA,qCACE,2CACA,cAAC,EAAD,CAAWS,OAAQoB","file":"static/js/4.3c230edb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"QuoteItem_item__14QIo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"QuoteList_list__3t596\",\"sorting\":\"QuoteList_sorting__1Hfy_\"};","import classes from './QuoteItem.module.css';\nimport {Link} from 'react-router-dom'\nconst QuoteItem = (props) => {\n  return (\n    <li className={classes.item}>\n      <figure>\n        <blockquote>\n          <p>{props.text}</p>\n        </blockquote>\n        <figcaption>{props.author}</figcaption>\n      </figure>\n      <Link className='btn' to={`/quote/${props.id}`}>\n        View Fullscreen\n      </Link>\n    </li>\n  );\n};\n\nexport default QuoteItem;\n","import { Fragment } from 'react';\n\nimport {useNavigate, useLocation} from 'react-router-dom'\n\nimport QuoteItem from './QuoteItem';\nimport classes from './QuoteList.module.css';\n\nconst sortQuotes = (quotes, ascending) => {\n  return quotes.sort((quoteA, quoteB) => {\n    if (ascending) {\n      return quoteA.id > quoteB.id ? 1 : -1;\n    } else {\n      return quoteA.id < quoteB.id ? 1 : -1;\n    }\n  });\n};\n\nconst QuoteList = (props) => {\n  const navigate = useNavigate()\n  const location = useLocation()\n\n  const queryParams = new URLSearchParams(location.search)\n  const isDesending = queryParams.get('sort') === 'asc'\n\n  const sortedQuotes = sortQuotes(props.quotes, isDesending)\n\n  const changeSortHandler = () => {\n    navigate(location.pathname + `?sort=${isDesending ? 'desc' : 'asc'}`)\n    // history.push({\n    //   path: location.pathname,\n    //   search: `?sort=${isDesending ? 'desc' : 'asc'}`\n    // })\n  }\n  return (\n    <Fragment>\n      <div className={classes.sorting}>\n        <button onClick={changeSortHandler}>{isDesending ? 'Show Descending' : 'Show Ascending'}</button> \n      </div>\n      <ul className={classes.list}>\n        {sortedQuotes.map((quote) => (\n          <QuoteItem\n            key={quote.id}\n            id={quote.id}\n            author={quote.author}\n            text={quote.text}\n          />\n        ))}\n      </ul>\n    </Fragment>\n  );\n};\n\nexport default QuoteList;\n","import QuoteList from '../../components/quotes/QuoteList'\r\n\r\nconst dummy_quotes = [\r\n  {id: 'q1', author: 'John', text: 'This is insane!'},\r\n  {id: 'q2', author: 'Mandy', text: 'Learning yourself'}\r\n]\r\n\r\nconst AllQuotes = props => {\r\n  return (\r\n  <>\r\n    <h1>AllQuotes</h1>\r\n    <QuoteList quotes={dummy_quotes}/>\r\n  </>\r\n  )\r\n}\r\nexport default AllQuotes\r\n"],"sourceRoot":""}